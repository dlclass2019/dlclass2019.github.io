---
layout: post
title:  "Deep Learning with Class Imbalance"
date:   2019-12-02 09:00:09 -0500
categories: post
mathjax: true
---
<!-- Need to include this line to enable mathjax -->
{% include mathjax.html %}
Class imbalance is a problem in machine learning where the number of one class of data is far less than the other classes. Such a problem is naturally inherent in many real-world applications like `fraud detection`, `identification of rare diseases`.

Before building any classifier model, it is important for us to deal with the problem of imbalanced data as there are issues associated with it. For instance, let us suppose that we are building a model to identify which transactions are fraudulent, based on the available features. Now suppose that the data is imbalanced i.e. there are `999` examples that correspond to non-fraudulent transactions (majority class) and only `1` example corresponding to the fraudulent transaction (minority class). In such a scenario, the gradient component corresponding to the minority class is much smaller than that of the majority class. Thus, while making predictions, the model is biased towards the majority class which leads to an inaccurate classification of the minority class.

![](http://dlclass2019.github.io/images/class_imb.png)
**Fig 1.** Data Distribution

In this blog, we will mention different techniques that are used to overcome the data imbalance problem. To be specific, we will talk about the following three approaches:

* Data level method
  - Oversampling and Undersampling
* Algorithm level method
  - Modify the learning algorithm and loss function
* Hybrid method
  - The combination of data and algorithm level methods


Youâ€™ll find this post in your `_posts` directory.

Jekyll requires blog post files to be named according to the following format:

`YEAR-MONTH-DAY-title.MARKUP`

Where `YEAR` is a four-digit number, `MONTH` and `DAY` are both two-digit numbers, and `MARKUP` is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}


You can add formulas
$$ F = G \frac{m_1 m_2} {r^2} $$
